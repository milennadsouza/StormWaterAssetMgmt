using System;
using System.Collections.Generic;
using System.Text;

namespace Stormwater_Analysis
{
    /// <summary>
    /// TypesOfPipes is an enum with Culvert, Mains
    /// </summary>

    enum TypesOfPipes
    {
        Culvert,
        Mains
    };

    enum TypesOfMaterials
    {
        Iron,
        Cast_Iron,
        Corrugated_Iron,
        Corrugated_Iron_with_Tar_Lining,
        Concrete,
        HDPE,
        PVC,
        Masonry
    };

 
        /// <summary>
    /// Pipe Class used to create new pipe entries
    /// </summary>
    class Pipe
    {
        // private static pipe_num to generate pipe_id
        private static int pipe_num = 0;

        #region properties
        /// <summary>
        /// Pipe_ID will be generated by constructor
        /// </summary>
                   
        public int Pipe_ID { get;  } //set using a constructor
        public TypesOfPipes Pipe_Type { get; set; } //mains, culverts
        public int Start_Manhole_ID { get; set; } // related Manhole ID from Manhole class
        public decimal Pipe_Length { get; set; }
        public int Depth { get; set; }   //Depth can be anywhere from 1 to 20 
        public TypesOfMaterials Material { get; set; } //Cast Iron, Concrete, HDPE, PVC, Corrugated Metal with Tar Lining, Corrugated Iron, Masonry
        public decimal Slope { get; set; } // 
        public int Est_Life { get;   set; }// -Can only be set from within this class scope. Not available to user to set. Cast Iron, Corrugated Metal with Tar Lining, HDPE, PVC, Concrete - 75 years / Masonry, Corrugated Iron - 50 years
        public bool Critical_Infrastructure { get; set; } 
        public bool Critical_Structure { get; set; }
        public DateTime DateOfInstallation { get; } //is set to current date from constructor
        public int Maintenance_Records_ID { get; set; }
        #endregion

        #region Constructor
        public Pipe()
        {
            pipe_num = pipe_num+1;
            Pipe_ID = pipe_num;
            DateOfInstallation = DateTime.Now;

        }
        #endregion
        
        #region Methods
         



          

        #endregion

        
    }

    
}
